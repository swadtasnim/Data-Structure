/*A problem from Interviewbit.com 

Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example:

Given the array [-2,1,-3,4,-1,2,1,-5,4],

the contiguous subarray [4,-1,2,1] has the largest sum = 6.

For this problem, return the maximum sum.

*/






int Solution::maxSubArray(const vector<int> &A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    int n=A.size(),s=0,a=INT_MIN,m=INT_MIN;
    for(int i=0; i<n; i++)
    {
        if(s+A[i]>0)
        s+=A[i];
        else
        {
        
        a=max(a,A[i]+s);
            
        s=0;
        continue;
        }
        
        a=max(a,s);
    }
   
    return a;
    
}
